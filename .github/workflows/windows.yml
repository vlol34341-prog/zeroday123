name: RDP via Tailscale - Optimized

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          # Enable Remote Desktop
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force

          # Configure firewall
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" `
            dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force

      - name: Optimize RDP Performance
        run: |
          # Optimisations pour rÃ©duire le lag et les glitches
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "MaxMonitors" -Value 4
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "MaxXResolution" -Value 1920
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "MaxYResolution" -Value 1080
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "ColorDepth" -Value 32

          # DÃ©sactiver les effets visuels pour amÃ©liorer les performances
          Set-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' `
                           -Name "fDisableWallpaper" -Value 1
          Set-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' `
                           -Name "fDisableFullWindowDrag" -Value 1
          Set-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' `
                           -Name "fDisableMenuAnims" -Value 1
          Set-ItemProperty -Path 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services' `
                           -Name "fDisableCursorSetting" -Value 0

          # AmÃ©liorer la rÃ©activitÃ© de la souris
          Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "MouseCursorHook" -Value 1

          # RedÃ©marrer les services
          Restart-Service -Name "TermService" -Force
          Restart-Service -Name "UmRdpService" -Force

      - name: Create RDP User with Secure Password
        run: |
          # Generate secure password
          $charSet = @{
              Upper   = [char[]](65..90)      # A-Z
              Lower   = [char[]](97..122)     # a-z
              Number  = [char[]](48..57)      # 0-9
              Special = ([char[]](33..47) + [char[]](58..64) +
                         [char[]](91..96) + [char[]](123..126)) # Special characters
          }
          $rawPassword = @()
          $rawPassword += $charSet.Upper | Get-Random -Count 4
          $rawPassword += $charSet.Lower | Get-Random -Count 4
          $rawPassword += $charSet.Number | Get-Random -Count 4
          $rawPassword += $charSet.Special | Get-Random -Count 4
          $password = -join ($rawPassword | Sort-Object { Get-Random })
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          
          # Create user
          New-LocalUser -Name "RDPUser" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDPUser"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDPUser"
          
          # Store credentials
          echo "RDP_USER=RDPUser" >> $env:GITHUB_ENV
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Install and Configure Tailscale
        run: |
          # Download and install Tailscale
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process -FilePath "msiexec.exe" -ArgumentList @("/i", "`"$installerPath`"", "/quiet", "/norestart") -Wait -NoNewWindow
          Remove-Item $installerPath -Force
          
          # Wait for installation to complete
          Start-Sleep -Seconds 10
          
          # Connect to Tailscale
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=github-runner-$env:GITHUB_RUN_ID --accept-routes

      - name: Get Tailscale IP
        run: |
          $retries = 0
          $maxRetries = 10
          $tsIP = $null
          
          while (-not $tsIP -and $retries -lt $maxRetries) {
              Start-Sleep -Seconds 5
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              $retries++
              Write-Host "Attempt $retries : IP = $tsIP"
          }
          
          if (-not $tsIP) {
              Write-Error "Failed to get Tailscale IP"
              exit 1
          }
          
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          Write-Host "Tailscale IP: $tsIP"

      - name: Display Connection Information
        run: |
          Write-Host "`n"
          Write-Host "================================================"
          Write-Host "ðŸš€ RDP ACCESS READY - OPTIMIZED"
          Write-Host "================================================"
          Write-Host "IP Address: $env:TAILSCALE_IP"
          Write-Host "Username: $env:RDP_USER"
          Write-Host "Password: $env:RDP_PASSWORD"
          Write-Host "================================================"
          Write-Host "RECOMMENDED RDP CLIENT SETTINGS:"
          Write-Host "- Experience: LAN (10 Mbps+)"
          Write-Host "- Color depth: 32-bit"
          Write-Host "- Display: 1280x720 or 1920x1080"
          Write-Host "- Disable wallpaper and visual effects"
          Write-Host "================================================"
          Write-Host "`n"

      - name: Keep RDP Session Active
        run: |
          Write-Host "âœ… RDP Optimized Session Active"
          Write-Host "Press 'Cancel' in GitHub to terminate"
          
          $counter = 0
          while ($true) {
              $counter++
              $currentTime = Get-Date -Format "HH:mm:ss"
              if ($counter % 10 -eq 0) {
                  Write-Host "[$currentTime] Session active - $counter minutes"
              }
              Start-Sleep -Seconds 60
          }
