name: RDP via Tailscale

on:
  workflow_dispatch:

jobs:
  secure-rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          # Enable Remote Desktop
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force

          # Configure firewall
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" `
            dir=in action=allow protocol=TCP localport=3389

          Restart-Service -Name TermService -Force

      - name: Create RDP User
        run: |
          # Generate secure password
          Add-Type -AssemblyName System.Web
          $password = [System.Web.Security.Membership]::GeneratePassword(16, 4)
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          
          # Create user
          New-LocalUser -Name "RDPUser" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "RDPUser"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDPUser"
          
          # Store credentials
          echo "RDP_USER=RDPUser" >> $env:GITHUB_ENV
          echo "RDP_PASSWORD=$password" >> $env:GITHUB_ENV

      - name: Install and Configure Tailscale
        run: |
          # Download and install Tailscale
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process -FilePath "msiexec.exe" -ArgumentList @("/i", "`"$installerPath`"", "/quiet", "/norestart") -Wait -NoNewWindow
          Remove-Item $installerPath -Force
          
          # Wait for installation to complete
          Start-Sleep -Seconds 10
          
          # Connect to Tailscale using your auth key
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=github-runner-$env:GITHUB_RUN_ID --accept-routes

      - name: Get Tailscale IP
        run: |
          # Get Tailscale IP address
          $retries = 0
          $maxRetries = 10
          $tsIP = $null
          
          while (-not $tsIP -and $retries -lt $maxRetries) {
              Start-Sleep -Seconds 5
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              $retries++
              Write-Host "Attempt $retries : IP = $tsIP"
          }
          
          if (-not $tsIP) {
              Write-Error "Failed to get Tailscale IP after $maxRetries attempts"
              exit 1
          }
          
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          Write-Host "Tailscale IP: $tsIP"

      - name: Display Connection Information
        run: |
          Write-Host "`n"
          Write-Host "================================================"
          Write-Host "üöÄ RDP ACCESS READY"
          Write-Host "================================================"
          Write-Host "IP Address: $env:TAILSCALE_IP"
          Write-Host "Username: $env:RDP_USER"
          Write-Host "Password: $env:RDP_PASSWORD"
          Write-Host "================================================"
          Write-Host "Connect via Tailscale network from your PC"
          Write-Host "================================================"
          Write-Host "`n"

      - name: Keep RDP Session Active
        run: |
          # Test RDP connectivity
          Write-Host "Testing RDP connectivity..."
          $testResult = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389 -WarningAction SilentlyContinue
          
          if ($testResult.TcpTestSucceeded) {
              Write-Host "‚úÖ RDP port 3389 is accessible via Tailscale"
          } else {
              Write-Host "‚ùå RDP port 3389 is not accessible"
          }
          
          # Keep the runner alive
          Write-Host "RDP session is active. Press 'Cancel' in GitHub to terminate."
          Write-Host "Monitoring connection every 60 seconds..."
          
          $counter = 0
          while ($true) {
              $counter++
              $currentTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
              Write-Host "[$currentTime] RDP session active - $counter minutes elapsed"
              Start-Sleep -Seconds 60
          }
